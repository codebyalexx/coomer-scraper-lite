// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Artist {
  id    String @id @default(cuid())
  url   String @unique
  name String
  identifier String
  service String
  isException Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts Post[]
  files File[]
}

model Post {
  id String @id @default(cuid())
  identifier String
  files File[]

  artistId String
  artist Artist @relation(fields: [artistId], references: [id])
}

model File {
  id String @id @default(cuid())
  url String
  filename String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  validated Boolean @default(false)

  storageId String?
  storage Storage? @relation(fields: [storageId], references: [id])

  postId String?
  post Post? @relation(fields: [postId], references: [id])

  artistId String
  artist Artist @relation(fields: [artistId], references: [id])

  metadata FileMetadata?
}

model FileMetadata {
  id String @id @default(cuid())

  type String
  width Int?
  height Int?
  duration Int?

  fileId String @unique
  file File @relation(fields: [fileId], references: [id])
}

model Storage {
  id String @id @default(cuid())
  name String
  host String
  port Int
  files File[]
}